### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Account {
  balance: Float
  color: String
  currency: String
  id: Int!
  name: String
  userId: Int
}

input AccountWhereUniqueInput {
  id: Int
}

type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  createAccount(balance: Float = 0, color: String!, currency: String!, name: String!): Account!
  createRecord(account: Int!, amount: Float = 0, category: String!, description: String = ""): Record!
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, password: String!): AuthPayload!
}

type Query {
  accounts: [Account!]!
  me: User
}

type Record {
  account: Account
  accountId: Int
  amount: Float
  category: String
  id: Int!
}

type User {
  accounts(after: AccountWhereUniqueInput, before: AccountWhereUniqueInput, first: Int, last: Int, skip: Int): [Account!]!
  email: String
  id: Int!
  password: String
}
