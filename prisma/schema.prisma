generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int      @default(autoincrement()) @id
  name      String
  color     String
  currency  String
  balance   Float
  records   Record[]
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("accounts")
}

model Category {
  id          Int         @default(autoincrement()) @id
  name        String
  icon        String?
  isVisible   Boolean
  expenseType ExpenseType @default(OUT)
  records     Record[]
  userId      Int?
  user        User?       @relation(fields: [userId], references: [id])
  createdAt   DateTime?
  updatedAt   DateTime    @updatedAt

  @@map("categories")
}

model Label {
  id        Int      @default(autoincrement()) @id
  name      String
  color     String
  userId    Int
  records   Record[] @relation(references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("labels")
}

model Record {
  id          Int         @default(autoincrement()) @id
  amount      Float
  description String?
  timestamp   DateTime
  expenseType ExpenseType @default(OUT)
  labels      Label[]     @relation(references: [id])
  accountId   Int
  categoryId  Int
  account     Account     @relation(fields: [accountId], references: [id])
  category    Category    @relation(fields: [categoryId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("records")
}

model User {
  id         Int        @default(autoincrement()) @id
  name       String
  email      String     @unique
  password   String
  accounts   Account[]
  categories Category[]
  labels     Label[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@map("users")
}

enum ExpenseType {
  IN
  OUT
  TRANSFER
}